<?php
// Задание 1. Конкатенация строк: объявите две строки, объедините их в одну.

$string1 = "Hello";
$string2 = "World!";
// Объединение строк
$String = $string1 . ", " . $string2;
// Вывод результата
echo $String . "\n";

// Задание 2. Изменение регистра: Преобразуйте строку в нижний и верхний регистры, используйте strtoupper() и strtolower().

$string = "Hello, World!";
// Преобразование в верхний регистр
echo strtoupper($string). "\n";
// Преобразование в нижний регистр
echo strtolower($string). "\n";

// Задание 3. Сравнение строк: Сравните две строки, учитывая и не учитывая регистр, попробуйте операторы ==, === и функцию strcasecmp().

$string1 = "Hello";
$string2 = "hello";
// Сравнение с учетом регистра
if ($string1 === $string2) {
 echo "Строки равны с учетом регистра". "\n";
} else {
 echo "Строки не равны с учетом регистра". "\n";
}
// Сравнение без учета регистра
if (strcasecmp($string1, $string2) === 0) {
 echo "Строки равны без учета регистра". "\n";
} else {
 echo "Строки не равны без учета регистра". "\n";
}

// Задание 4. Поиск подстроки: Найдите позицию подстроки в строке, используйте функцию strpos().

$string = 'abcdefg';
// Подстрока
$find = 'c';
// Нахождение подстроки
$pos = strpos($string, $find);
// поиск
if ($pos === false) {
 echo "Строка '$find' не найдена в строке '$string'". "\n";
} else {
 echo "Строка '$find' найдена в строке '$string' в позиции $pos". "\n";
}

// Задание 5. Замена подстроки: Замените одно слово в строке на другое, используйте str_replace().

$string = 'Hello, World!';
// Слово для замены
$find = 'World';
// Новое слово
$replace = 'Мир';
// Замена слова
$newstring = str_replace($find, $replace, $string);
// Вывод результата
echo $newstring. "\n";

// Задание 6. Форматирование строки: Отформатируйте строку с использованием переменных, используйте функцию sprintf() с нужными спецификаторами.

$name = "Sergey";
$age = 45;
$city = "New York";
// Форматирование строки
$String = sprintf("Имя: %s, возраст: %d, город: %s", $name, $age, $city);
// Вывод результата
echo $String. "\n"; 

// Задание 7. Разделение строки: Разделите строку по разделителю и объедините её обратно, используйте explode() и implode().

$string = "Hello,World!";
// Разделитель
$limiter = ",";
// Разделение строки
$exploded = explode($limiter, $string);
// Вывод элементов массива
echo "Элементы массива после разделения:";
foreach ($exploded as $element) {
 echo $element . "\n";
}
// Объединение элементов в строку
$joined = implode(" ", $exploded);
// Вывод результата
echo "Объединенная строка: " . $joined. "\n";

// Задание 8. Работа с многострочным текстом: Преобразуйте многострочный текст в HTML-разметку с <br>, используйте nl2br().

// Пример многострочного текста
$text = "Это
многострочный
текст";
// Преобразование
$html = nl2br($text);
// Вывод результата
echo $html. "\n";

// Уровень 2: Усложненный.

// Задание 2.1. Сложная конкатенация строк: объедините несколько строк и добавьте в них переменные в одном выражении.

$name = "Sergey";
$age = 45;
$city = "New York";
// Объединение
$String = "Меня зовут $name, мне $age лет, и я живу в $city.";
// Вывод результата
echo $String. "\n";

// Задание 2.2. Изменение регистра с условиями: Преобразуйте строку так, чтобы каждое слово начиналось с заглавной буквы, используйте функции ucwords() и strtolower().

$string = "hello, world!";
// Преобразование в нижний регистр
$lower = strtolower($string);
// Вывод строки
echo "Исходная строка в нижнем регистре: " . $lower . "\n";
// Преобразование в верхний регистр
$upper = ucwords($lower);
// Вывод результата
echo "Преобразованная строка: " . $upper. "\n";

// Задание 2.3. Сравнение строк с учётом регистра и без: Проверьте строки на полное совпадение и сравните их без учёта регистра, используйте операторы ==, === и функцию strcasecmp().

$string1 = "Hello, World!";
$string2 = "hello, world!";
// Сравнение строк с использованием оператора ==
if ($string1 == $string2) {
    echo "Строки совпадают". "\n";
} else {
    echo "Строки не совпадают". "\n";
}
// Сравнение строк с использованием оператора ===
if ($string1 === $string2) {
    echo "Строки совпадают с использованием оператора ===". "\n";
} else {
    echo "Строки не совпадают с использованием оператора ===". "\n";
}
// Сравнение с использованием функции strcasecmp()
if (strcasecmp($string1, $string2) === 0) {
    echo "Строки совпадают без учёта регистра". "\n";
} else {
    echo "Строки не совпадают без учёта регистра". "\n";
}

// Задание 2.4. Замена подстроки с использованием массива: замените несколько слов в строке одновременно, используя массивы для поиска и замены. Примените str_replace(), передавая массивы.

$string = "Hello, World! This is test";
// Массив
$search = array("Hello", "World", "test");
$replace = array("Привет", "Мир", "пример");
// Замена слов
$newString = str_replace($search, $replace, $string);
// Вывод результата
echo "Новая строка: " . $newString. "\n";

// Задание 2.5. Форматирование строки с числом: Отформатируйте строку, включив в неё числовые значения и строки, используйте функцию sprintf() с комбинацией %s и %d.

$name = "Sergey";
$age = 45;
$city = "New York";
// Форматирование строки 
$String = sprintf("Меня зовут %s, мне %d лет, и я живу в %s.", $name, $age, $city);
// Вывод результата
echo $String. "\n";

// Задание 2.6. Разделение и объединение сложной строки: Разделите строку с числовыми значениями по разделителю, суммируйте элементы и выведите результат, используйте explode() и array_sum().

$string = "10, 25, 36, 44, 58";
// Разделение строки
$numbers = explode(",", $string);
// Преобразование
$numbers = array_map('intval', $numbers);
// Суммирование
$sum = array_sum($numbers);
// Вывод результата
echo "Сумма чисел: " . $sum. "\n";

// Задание 2.7. Создание случайной строки: Напишите функцию, которая генерирует случайную строку из букв и цифр, используйте массив символов и функцию rand().

function generateRandomString($length) {
 $characters = 'ABCDEFG1234567890';
 $charactersLength = strlen($characters);
 $randomString  = '';
 for ($i = 0; $i < $length; $i++) {
 $randomChar = $characters[rand(0, $charactersLength - 1)];
 $randomString .= $randomChar;
 }
 return $randomString;
}
// Использование функции
$randomString = generateRandomString(8);
// Вывод результата
echo "Случайная строка: " . $randomString. "\n";

// Задание 2.8. Проверка строки на палиндром: Напишите функцию, которая проверяет, является ли строка палиндромом, используйте strrev() для переворота строки.

// Функция
function Palindrome($string) {
 $revers = strrev($string);
 return $string === $revers;
}
// Вывод результата
$test = "noon";
$revers = strrev($test);
echo "Исходная строка: " . $test . "\n";
echo "Перевернутая строка: " . $revers . "\n";
echo "Является ли строка палиндромом: " . (Palindrome($test) ? "Да" : "Нет");